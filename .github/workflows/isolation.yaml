on: [push, pull_request]

env:
  RUST_BACKTRACE: full
  RUST_LOG: debug
  CARGO_PROFILE_TEST_BUILD_OVERRIDE_DEBUG: true

name: Test (Isolated)
jobs:

  test_in_container_with_dotnet:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    name: Test Suite In Container
    runs-on: ${{ matrix.os }}
    container:
        image: rust:1.76.0
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install CLR
        shell: bash
        run: |
            wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
            chmod +x ./dotnet-install.sh
            ./dotnet-install.sh -c 8.0 --runtime dotnet
            export DOTNET_ROOT=$HOME/.dotnet
            export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools
            echo "DOTNET_ROOT=$HOME/.dotnet" >> $GITHUB_ENV
            echo "PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools" >> $GITHUB_ENV
            dotnet --list-runtimes
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Run cargo install
        run: |
           cargo install --path ./thermorawfilereader --root .
      - uses: actions/upload-artifact@v4
        with:
          name: fficheck
          path: bin/fficheck
          retention-days: 1

  test_binary_without_dotnet:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    name: Test Binary Without Runtime
    runs-on: ${{ matrix.os }}
    container:
        image: rust:1.76.0
    needs: test_in_container_with_dotnet
    steps:
      - name: Fetch binary
        uses: actions/download-artifact@v4
        with:
          name: fficheck
      - name: Run binary
        run: >-
          ./fficheck tests/small.raw -1