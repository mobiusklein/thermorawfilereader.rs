// This schema is purely for in-memory use, no guarantee is made for serialization

namespace librawfilereader;

enum Polarity : int8 {
    Positive = 1,
    Negative = -1,
    Unknown = 0
}

enum SpectrumMode : int8 {
    Unknown = 0,
    Centroid = 1,
    Profile = 2
}

enum DissociationMethod : uint8 {
    Unknown = 0,
    CID = 1,
    HCD = 2,
    ETD = 4,
    ETCID = 5,
    ETHCD = 6,

    ECD = 8,
    ECCID = 9,
    ECHCD = 10,

    NETD = 16,
    PTD = 32,
    MPD = 64,
}

enum MassAnalyzer : uint8 {
    Unknown,
    ITMS,
    TQMS,
    SQMS,
    TOFMS,
    FTMS,
    Sector,
    ASTMS
}

enum IonizationMode : uint8
{
    ElectronImpact,
    ChemicalIonization,
    FastAtomBombardment,
    ElectroSpray,
    AtmosphericPressureChemicalIonization,
    NanoSpray,
    ThermoSpray,
    FieldDesorption,
    MatrixAssistedLaserDesorptionIonization,
    GlowDischarge,
    Any,
    PaperSprayIonization,
    CardNanoSprayIonization,
    IonizationMode1,
    IonizationMode2,
    IonizationMode3,
    IonizationMode4,
    IonizationMode5,
    IonizationMode6,
    IonizationMode7,
    IonizationMode8,
    IonizationMode9,
    IonModeBeyondKnown
}

table FileDescriptionT {
    creation_date: string;
    sample_id: string;
    source_file: string;
    spectra_per_ms_level: [uint32];
}

table InstrumentModelT {
    configurations: [InstrumentConfigurationT];
    name: string;
    model: string;
    serial_number: string;
    hardware_version: string;
    software_version: string;
}

struct InstrumentConfigurationT {
    mass_analyzer: MassAnalyzer;
    ionization_mode: IonizationMode;
}

struct IsolationWindowT {
    lower: float64;
    target: float64;
    upper: float64;
}

struct ActivationT {
    dissociation_method: DissociationMethod;
    collision_energy: float64;
}

table SpectrumData {
    mz: [float64];
    intensity: [float32];
}

struct PrecursorT {
    mz: float64;
    intensity: float32;
    charge: int32;
    parent_index: int32;
    isolation_window: IsolationWindowT;
    activation: ActivationT;
}

table AcquisitionT {
    low_mz: float64;
    high_mz: float64;
    injection_time: float32;
    compensation_voltage: float32 = null;
    mass_analyzer: MassAnalyzer = FTMS;
    scan_event: int32 = 1;
    ionization_mode: IonizationMode = NanoSpray;
}

table SpectrumDescription {
    index: int32;
    ms_level: uint8 = 2;
    time: float64;
    polarity: Polarity = Positive;
    mode: SpectrumMode = Profile;
    precursor: PrecursorT;
    data: SpectrumData;
    filter_string: string;
    acquisition: AcquisitionT;
}

root_type SpectrumDescription;