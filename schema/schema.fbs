// This schema is purely for in-memory use, no guarantee is made for serialization

namespace librawfilereader;

enum Polarity : int8 {
    Positive = 1,
    Negative = -1,
    Unknown = 0
}

enum SpectrumMode : int8 {
    Unknown = 0,
    Centroid = 1,
    Profile = 2
}

enum DissociationMethod : uint8 {
    Unknown = 0,
    CID = 1,
    HCD = 2,
    ETD = 4,
    ETCID = 5,
    ETHCD = 6,

    ECD = 8,
    ECCID = 9,
    ECHCD = 10,

    NETD = 16,
    PTD = 32,
    MPD = 64,
}

enum MassAnalyzer : uint8 {
    Unknown,
    ITMS,
    TQMS,
    SQMS,
    TOFMS,
    FTMS,
    Sector,
    ASTMS
}

enum IonizationMode : uint8
{
    ElectronImpact,
    ChemicalIonization,
    FastAtomBombardment,
    ElectroSpray,
    AtmosphericPressureChemicalIonization,
    NanoSpray,
    ThermoSpray,
    FieldDesorption,
    MatrixAssistedLaserDesorptionIonization,
    GlowDischarge,
    Any,
    PaperSprayIonization,
    CardNanoSprayIonization,
    IonizationMode1,
    IonizationMode2,
    IonizationMode3,
    IonizationMode4,
    IonizationMode5,
    IonizationMode6,
    IonizationMode7,
    IonizationMode8,
    IonizationMode9,
    IonModeBeyondKnown
}

enum TraceTypeT : int16 {
    StartMSChromatogramTraces = -1,
    MassRange = 0,
    TIC = 1,
    BasePeak = 2,
    Fragment = 3,
    Custom = 4,
    PrecursorMass = 5,
    EndMSChromatogramTraces = 6,
    StartAnalogChromatogramTraces = 10,
    Analog1 = 11,
    Analog2 = 12,
    Analog3 = 13,
    Analog4 = 14,
    Analog5 = 15,
    Analog6 = 16,
    Analog7 = 17,
    Analog8 = 18,
    EndAnalogChromatogramTraces = 19,
    StartPDAChromatogramTraces = 20,
    WavelengthRange = 21,
    TotalAbsorbance = 22,
    SpectrumMax = 23,
    EndPDAChromatogramTraces = 24,
    StartUVChromatogramTraces = 30,
    ChannelA = 31,
    ChannelB = 32,
    ChannelC = 33,
    ChannelD = 34,
    ChannelE = 35,
    ChannelF = 36,
    ChannelG = 37,
    ChannelH = 38,
    EndUVChromatogramTraces = 39,
    StartPCA2DChromatogramTraces = 40,
    A2DChannel1 = 41,
    A2DChannel2 = 42,
    A2DChannel3 = 43,
    ChromatogramA2DChannel3 = 43,
    A2DChannel4 = 44,
    ChromatogramA2DChannel4 = 44,
    A2DChannel5 = 45,
    A2DChannel6 = 46,
    A2DChannel7 = 47,
    A2DChannel8 = 48,
    EndPCA2DChromatogramTraces = 49,
    EndAllChromatogramTraces = 50
}

table FileDescriptionT {
    creation_date: string;
    sample_id: string;
    source_file: string;
    spectra_per_ms_level: [uint32];
}

table InstrumentModelT {
    configurations: [InstrumentConfigurationT];
    name: string;
    model: string;
    serial_number: string;
    hardware_version: string;
    software_version: string;
}

struct InstrumentConfigurationT {
    mass_analyzer: MassAnalyzer;
    ionization_mode: IonizationMode;
}

struct IsolationWindowT {
    lower: float64;
    target: float64;
    upper: float64;
}

struct ActivationT {
    dissociation_method: DissociationMethod;
    collision_energy: float64;
}

table SpectrumData {
    mz: [float64];
    intensity: [float32];
}

struct PrecursorT {
    mz: float64;
    intensity: float32;
    charge: int32;
    parent_index: int32;
    isolation_window: IsolationWindowT;
    activation: ActivationT;
}

table InstrumentMethodT {
    index: uint8 = 0;
    text: string;
    display_name: string;
    name: string;
}

// Describe *how* a spectrum was acquired
table AcquisitionT {
    // The lowest m/z scanned, part of a scan window
    low_mz: float64;
    // The highest m/z scanned, part of a scan window
    high_mz: float64;
    // The injection time in milliseconds
    injection_time: float32;
    // The ion mobility measure recorded when a FAIMS device is present
    compensation_voltage: float32 = null;
    mass_analyzer: MassAnalyzer = FTMS;
    // The scan event corresponding to a preset scan configuration defined in the
    // instrument method
    scan_event: int32 = 1;
    // The ionization mechanism used for this spectrum
    ionization_mode: IonizationMode = NanoSpray;
}

table SpectrumDescription {
    index: int32;
    ms_level: uint8 = 2;
    time: float64;
    polarity: Polarity = Positive;
    mode: SpectrumMode = Profile;
    precursor: PrecursorT;
    data: SpectrumData;
    filter_string: string;
    acquisition: AcquisitionT;
}

table ChromatogramData {
    time: [float64];
    intensity: [float32];
}

table ChromatogramDescription {
    trace_type: TraceTypeT;
    data: ChromatogramData;
    start_index: int32;
    end_index: int32;
}

root_type SpectrumDescription;