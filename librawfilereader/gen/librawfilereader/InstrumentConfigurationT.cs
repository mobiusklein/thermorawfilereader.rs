// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace librawfilereader
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct InstrumentConfigurationT : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public InstrumentConfigurationT __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public librawfilereader.MassAnalyzer MassAnalyzer { get { return (librawfilereader.MassAnalyzer)__p.bb.Get(__p.bb_pos + 0); } }
  public librawfilereader.IonizationMode IonizationMode { get { return (librawfilereader.IonizationMode)__p.bb.Get(__p.bb_pos + 1); } }

  public static Offset<librawfilereader.InstrumentConfigurationT> CreateInstrumentConfigurationT(FlatBufferBuilder builder, librawfilereader.MassAnalyzer MassAnalyzer, librawfilereader.IonizationMode IonizationMode) {
    builder.Prep(1, 2);
    builder.PutByte((byte)IonizationMode);
    builder.PutByte((byte)MassAnalyzer);
    return new Offset<librawfilereader.InstrumentConfigurationT>(builder.Offset);
  }
}


}
